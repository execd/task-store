// Package mocks holds mocks for our interfaces.
package mocks

import mock "github.com/stretchr/testify/mock"
import model "github.com/wayofthepie/task-store/pkg/model"

// TaskQueue is an autogenerated mock type for the TaskQueue type
type TaskQueue struct {
	mock.Mock
}

// GetTaskInfo provides a mock function with given fields: taskID
func (_m *TaskQueue) GetTaskInfo(taskID string) (*model.TaskSpec, error) {
	ret := _m.Called(taskID)

	var r0 *model.TaskSpec
	if rf, ok := ret.Get(0).(func(string) *model.TaskSpec); ok {
		r0 = rf(taskID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.TaskSpec)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(taskID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Push provides a mock function with given fields: spec
func (_m *TaskQueue) Push(spec *model.TaskSpec) (string, error) {
	ret := _m.Called(spec)

	var r0 string
	if rf, ok := ret.Get(0).(func(*model.TaskSpec) string); ok {
		r0 = rf(spec)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*model.TaskSpec) error); ok {
		r1 = rf(spec)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
